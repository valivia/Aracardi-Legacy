# Use postgres/example user/password credentials
version: '3.1'

services:
  # db:
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: example
  #   volumes:
  #     - ./init-scripts/:/docker-entrypoint-initdb.d/
  #   ports:
  #     - 9305:5432

  mongo_db:
    image: mongo
    container_name: mongo_db
    restart: always
    expose:
      - 27017
    ports:
      - 9305:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root     
      MONGO_INITDB_ROOT_PASSWORD: example
      # TODO read from environment variables
      # https://docs.docker.com/compose/environment-variables/
    volumes:
      - ./mongo-init-scripts/:/docker-entrypoint-initdb.d/
      - ./keyfile/:/opt/keyfile/
    entrypoint:
            - bash
            - -c
            - |
                chmod 400 /opt/keyfile/shared.key
                chown 999:999 /opt/keyfile/shared.key
                exec docker-entrypoint.sh $$@
    command: mongod --auth --keyFile /opt/keyfile/shared.key --replSet rs0

  mongo_db_init:
    image: mongo
    container_name: mongo_db_init
    restart: "no"

    depends_on:
      - mongo_db
    command: >
      mongosh --host mongo_db:27017 -u root -p example --eval "rs.initiate({_id: 'rs0', members: [{_id: 0, host: 'localhost:27017'}]});"
